{
    "openapi": "3.1.0",
    "info": {
        "title": "Company Services",
        "description": "Company services management microservice documentation",
        "version": "1.0.0",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "agendai.suporte@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:3001/",
    "basePath": "/services",
    "paths": {
        "/services": {
            "post": {
                "tags": [
                    "Service"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create a new service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCreateService"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseService"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update an existing service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestUpdateService"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseService"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/services/{serviceId}": {
            "delete": {
                "tags": [
                    "Service"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete a service by ID",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the service to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "get": {
                "tags": [
                    "Service"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Get a service by ID",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the service to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseService"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/services/scheduled-services/{companyId}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Get scheduled services by company ID",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the company to retrieve scheduled services for"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scheduled services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseServiceList"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/services/company-services/{companyId}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "description": "Get services by company ID",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the company to retrieve services for"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseServiceList"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/services/search/{text}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "description": "Search services by text",
                "parameters": [
                    {
                        "name": "text",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Text to search for services"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseServiceList"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No services found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/services/services-types/{typeService}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "description": "Get services by type",
                "parameters": [
                    {
                        "name": "typeService",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Type of the service to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services by type retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseServiceList"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No services found for this type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RequestCreateService": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the service",
                        "example": "Haircut"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the service",
                        "example": "A standard haircut"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the service",
                        "example": 25.0
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the service in minutes",
                        "example": 30
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the service",
                        "example": "Barber"
                    }
                }
            },
            "RequestUpdateService": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "integer",
                        "description": "ID of the service to be updated",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the service",
                        "example": "Haircut"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the service",
                        "example": "A standard haircut"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the service",
                        "example": 25.0
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the service in minutes",
                        "example": 30
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the service",
                        "example": "Barber"
                    }
                }
            },
            "ResponseService": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the service",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the service",
                        "example": "Haircut"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the service",
                        "example": "A standard haircut"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the service",
                        "example": 25.0
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the service in minutes",
                        "example": 30
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the service",
                        "example": "Barber"
                    },
                    "createdBy": {
                        "type": "integer",
                        "description": "ID of the user who created the service",
                        "example": 1
                    }
                }
            },
            "ResponseServiceList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ResponseService"
                }
            },
            "ResponseMessage": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message",
                        "example": "Operation successful"
                    }
                }
            }
        }
    }
}
